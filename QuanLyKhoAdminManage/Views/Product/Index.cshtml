@using QuanLyKhoViewModels.Common
@model PagedResult<QuanLyKhoViewModels.System.Products.ProductVm>

@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Script{
    <script>
setTimeout(function() {
    $('#msgAlert').fadeOut('slow');
}, 2000);
      
    </script>
}
@section xs{
     <script type="text/javascript">
        $(function () {
            $("#FindProducts").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Product/AutoComplete/',
                        data: { "prefix": request.term },
                        type: "POST",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfProduct").val(i.item.val);
                },
                minLength: 1
            });
        });
    </script>
}
   <style>
       .cursor-default{
           cursor:default;
       }
   </style>
 <div class="container-fluid">
    <h1 class="mt-4">Danh sách sản phẩm</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
        <li class="breadcrumb-item active">Danh sách sản phẩm</li>
    </ol>
    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12 d-flex align-items-center">
                    <a asp-action="Create" class = "btn bg-info text-decoration-none text-light">Tạo sản phẩm mới</a>

                </div>
                <div class="col-md-6 col-xs-12 d-flex align-items-center justify-content-end">
                  </div>
                <div class="col-md-6 col-xs-12">
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="row">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }
                @if (ViewBag.Err != null)
                {
                    <div id="msgAlert" class="alert alert-danger" role="alert">
                        @ViewBag.Err
                    </div>
                }
            </div>
            <div class="table-responsive" >
                <table class="table table-bordered" id = "datatablesSimple">
                    <thead>
                        <tr>
                            <th>
                                Mã SP
                            </th>
                            <th>
                                Tên
                            </th>
                          
                            <th>
                                Giá nhập
                            </th>
                            <th>
                                Số lượng tồn
                            </th>

                            <th>
                                Quy cách
                            </th>

                            <th>

                                Chức năng

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>                             
                                <td>
                                    @Html.DisplayFor(modelItem => item.OriginPrice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Quantity)
                                </td>
                                 <td>
                                    @Html.DisplayFor(modelItem => item.ToTalSum)
                                </td>
                                <td>
                                    @*@Html.ActionLink("Xem", "Details", new { id = item.Id }, new {@class = "btn bg-info text-decoration-none text-light"}) |*@
                                    @Html.ActionLink("Sửa", "Update", new {  id = item.Id }, new {@class = "btn bg-warning text-decoration-none text-light"}) 
                                    @*@Html.ActionLink("Xóa", "Delete", new { id = item.Id }, new {@class = "btn bg-danger text-decoration-none text-light"}) |*@
                                                                                               

                                
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>
