@using QuanLyKhoViewModels.Common
@model PagedResult<QuanLyKhoViewModels.Catalog.Guest.GuestViewModels>

@{
    ViewData["Title"] = "Thông tin khách hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Script{
    <script>
setTimeout(function() {
    $('#msgAlert').fadeOut('slow');
}, 2000);
      
    </script>
}

<div class="container-fluid">
    <h1 class="mt-4">Danh sách nhân viên</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
        <li class="breadcrumb-item active">Danh sách khách hàng</li>
    </ol>
    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12 d-flex align-items-center">
                    <a class="btn btn-success" asp-action="Create" asp-controller="Guest">Tạo mới</a>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="row">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }
                @if (ViewBag.Err != null)
                {
                    <div id="msgAlert" class="alert alert-danger" role="alert">
                        @ViewBag.Err
                    </div>
                }
            </div>
            <div class="table-responsive" >
                 <table class="table table-bordered" id = "datatablesSimple">
    <thead>
        <tr>
            <th>
               Mã khách hàng
            </th>
            <th>
                Họ
            </th>
            <th>
               Tên
            </th>
            <th>
                Ngày sinh
            </th>
            <th>
               Số điện thoại
            </th>
            <th>
                Email
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirtName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dob)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Công nợ", "Details","Debt", new {  id=item.ID  }, new {@class = "btn bg-info text-decoration-none text-light"}) |
                @Html.ActionLink("Xóa", "Delete", new {  id=item.ID  }, new {@class = "btn bg-info text-decoration-none text-light"})
            </td>
        </tr>
}
    </tbody>
</table>
            </div>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>


 @*<div class="col-md-6 col-xs-12 d-flex align-items-center">
                    <a class="btn btn-success" asp-action="Create" asp-controller="Guest">Tạo mới</a>
                </div>
 <div class="row">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }
                @if (ViewBag.Err != null)
                {
                    <div id="msgAlert" class="alert alert-danger" role="alert">
                        @ViewBag.Err
                    </div>
                }
            </div>
                   <div class="table-responsive">
 <table class="table table-bordered" id = "datatablesSimple">
    <thead>
        <tr>
            <th>
               Mã khách hàng
            </th>
            <th>
                Họ
            </th>
            <th>
               Tên
            </th>
            <th>
                Ngày sinh
            </th>
            <th>
               Số điện thoại
            </th>
            <th>
                Email
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirtName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dob)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Công nợ", "Details","Debt", new {  id=item.ID  }) |
                @Html.ActionLink("Delete", "Delete", new {  id=item.ID  })
            </td>
        </tr>
}
    </tbody>
</table>
 </div>
                                @await Component.InvokeAsync("Pager",Model)
                            </div>
</div>
*@